{"version":3,"sources":["../node_modules/swr/esm/libs/is-document-visible.js","../node_modules/swr/esm/libs/is-online.js","../node_modules/swr/esm/libs/hash.js","../node_modules/swr/esm/config.js","../node_modules/swr/esm/cache.js","../node_modules/swr/esm/libs/throttle.js","../node_modules/swr/esm/swr-config-context.js","../node_modules/swr/esm/use-swr.js","../node_modules/swr/esm/use-swr-pages.js","../node_modules/swr/esm/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/swr/node_modules/fast-deep-equal/index.js"],"names":["isDocumentVisible","document","visibilityState","isOnline","navigator","onLine","table","WeakMap","counter","cache","initialData","this","__cache","Map","Object","entries","__listeners","key","serializeKey","_key","get","value","shouldNotify","set","mutate","notify","Array","from","keys","has","forEach","clear","delete","args","err","isArray","length","i","_hash","String","hash","listener","Error","isSubscribed","push","index","indexOf","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","slowConnection","window","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","deepEqual","eventsBinded","addEventListener","throttle","fn","interval","pending","SWRConfigContext","createContext","displayName","IS_SERVER","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","trigger","shouldRevalidate","keyErr","updaters","currentData","currentError","broadcastState","data","error","_data","a","Date","now","then","Provider","useSWR","fnArgs","assign","useContext","fetcher","initialError","stateDependencies","useRef","isValidating","stateRef","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","k","current","unmountedRef","keyRef","boundMutate","revalidateOpts","dedupe","loading","shouldDeduping","startAt","newData","undefined","newState","currentHookData","latestKeyedData","onFocus","softRevalidate","revalidateOnMount","onUpdate","updatedData","updatedError","needUpdate","reconnect","revalidators","pop","removeEventListener","timer","tick","clearTimeout","latestData","latestError","useMemo","state","defineProperties","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","self","arguments","apply","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","keyList","hasProp","equal","b","arrA","arrB","dateA","dateB","getTime","regexpA","RegExp","regexpB"],"mappings":"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","file":"static/js/3.52097b7d.chunk.js","sourcesContent":["export default function isDocumentVisible() {\n    if (typeof document !== 'undefined' &&\n        typeof document.visibilityState !== 'undefined') {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n}\n","export default function isOnline() {\n    if (typeof navigator.onLine !== 'undefined') {\n        return navigator.onLine;\n    }\n    // always assume it's online\n    return true;\n}\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    let key = 'arg';\n    for (let i = 0; i < args.length; ++i) {\n        let _hash;\n        if (args[i] === null || typeof args[i] !== 'object') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // null        -> 'null'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport Cache from './cache';\n// cache\nconst cache = new Cache();\n// state managers\nconst CONCURRENT_PROMISES = {};\nconst CONCURRENT_PROMISES_TS = {};\nconst FOCUS_REVALIDATORS = {};\nconst CACHE_REVALIDATORS = {};\nconst MUTATION_TS = {};\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (config.errorRetryCount && opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    const count = Math.min(opts.retryCount || 0, 8);\n    const timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nconst slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nconst defaultConfig = {\n    // events\n    onLoadingSlow: () => { },\n    onSuccess: () => { },\n    onError: () => { },\n    onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: deepEqual\n};\n// Focus revalidate\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n    const revalidate = () => {\n        if (!isDocumentVisible() || !isOnline())\n            return;\n        for (let key in FOCUS_REVALIDATORS) {\n            if (FOCUS_REVALIDATORS[key][0])\n                FOCUS_REVALIDATORS[key][0]();\n        }\n    };\n    window.addEventListener('visibilitychange', revalidate, false);\n    window.addEventListener('focus', revalidate, false);\n    // only bind the events once\n    eventsBinded = true;\n}\nexport { CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, CACHE_REVALIDATORS, MUTATION_TS, cache };\nexport default defaultConfig;\n","import { mutate } from './use-swr';\nimport hash from './libs/hash';\nexport default class Cache {\n    constructor(initialData = {}) {\n        this.__cache = new Map(Object.entries(initialData));\n        this.__listeners = [];\n    }\n    get(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.get(_key);\n    }\n    set(key, value, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        this.__cache.set(_key, value);\n        if (shouldNotify)\n            mutate(key, value, false);\n        this.notify();\n    }\n    keys() {\n        return Array.from(this.__cache.keys());\n    }\n    has(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.has(_key);\n    }\n    clear(shouldNotify = true) {\n        if (shouldNotify)\n            this.__cache.forEach(key => mutate(key, null, false));\n        this.__cache.clear();\n        this.notify();\n    }\n    delete(key, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        if (shouldNotify)\n            mutate(key, null, false);\n        this.__cache.delete(_key);\n        this.notify();\n    }\n    // TODO: introduce namespace for the cache\n    serializeKey(key) {\n        let args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        const errorKey = key ? 'err@' + key : '';\n        return [key, args, errorKey];\n    }\n    subscribe(listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        let isSubscribed = true;\n        this.__listeners.push(listener);\n        return () => {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            const index = this.__listeners.indexOf(listener);\n            if (index > -1) {\n                this.__listeners[index] = this.__listeners[this.__listeners.length - 1];\n                this.__listeners.length--;\n            }\n        };\n    }\n    // Notify Cache subscribers about a change in the cache\n    notify() {\n        for (let listener of this.__listeners) {\n            listener();\n        }\n    }\n}\n","export default function throttle(fn, interval) {\n    let pending = false;\n    return (...args) => {\n        if (pending)\n            return;\n        pending = true;\n        fn(...args);\n        setTimeout(() => (pending = false), interval);\n    };\n}\n","import { createContext } from 'react';\nconst SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","import { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS, cache } from './config';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nconst IS_SERVER = typeof window === 'undefined';\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\nconst trigger = (_key, shouldRevalidate = true) => {\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    const [key, , keyErr] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        const currentData = cache.get(key);\n        const currentError = cache.get(keyErr);\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](shouldRevalidate, currentData, currentError, i > 0);\n        }\n    }\n};\nconst broadcastState = (key, data, error) => {\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error);\n        }\n    }\n};\nconst mutate = async (_key, _data, shouldRevalidate = true) => {\n    const [key] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    // if there is no new data, call revalidate against the key\n    if (typeof _data === 'undefined')\n        return trigger(_key, shouldRevalidate);\n    // update timestamp\n    MUTATION_TS[key] = Date.now() - 1;\n    let data, error;\n    if (_data && typeof _data === 'function') {\n        // `_data` is a function, call it passing current cache value\n        try {\n            data = await _data(cache.get(key));\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else if (_data && typeof _data.then === 'function') {\n        // `_data` is a promise\n        try {\n            data = await _data;\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else {\n        data = _data;\n    }\n    if (typeof data !== 'undefined') {\n        // update cached data, avoid notifying from the cache\n        cache.set(key, data, false);\n    }\n    // update existing SWR Hooks' state\n    const updaters = CACHE_REVALIDATORS[key];\n    if (updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](!!shouldRevalidate, data, error, i > 0);\n        }\n    }\n    // throw error or return data to be used by caller of mutate\n    if (error)\n        throw error;\n    return data;\n};\nfunction useSWR(...args) {\n    let _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    const [key, fnArgs, keyErr] = cache.serializeKey(_key);\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    if (typeof fn === 'undefined') {\n        // use a global fetcher\n        fn = config.fetcher;\n    }\n    const initialData = cache.get(key) || config.initialData;\n    const initialError = cache.get(keyErr);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    const stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    const stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: false\n    });\n    const rerender = useState(null)[1];\n    let dispatch = useCallback(payload => {\n        let shouldUpdateState = false;\n        for (let k in payload) {\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    const unmountedRef = useRef(false);\n    const keyRef = useRef(key);\n    const boundMutate = useCallback((data, shouldRevalidate) => {\n        return mutate(key, data, shouldRevalidate);\n    }, [key]);\n    // start a revalidation\n    const revalidate = useCallback(async (revalidateOpts = {}) => {\n        if (!key || !fn)\n            return false;\n        if (unmountedRef.current)\n            return false;\n        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n        let loading = true;\n        let shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n        // start fetching\n        try {\n            dispatch({\n                isValidating: true\n            });\n            let newData;\n            let startAt;\n            if (shouldDeduping) {\n                // there's already an ongoing request,\n                // this one needs to be deduplicated.\n                startAt = CONCURRENT_PROMISES_TS[key];\n                newData = await CONCURRENT_PROMISES[key];\n            }\n            else {\n                // if not deduping the request (hard revalidate) but\n                // there're other ongoing request(s) at the same time,\n                // we need to ignore the other result(s) to avoid\n                // possible race conditions:\n                // req1------------------>res1\n                //      req2-------->res2\n                // in that case, the second response should not be overridden\n                // by the first one.\n                if (CONCURRENT_PROMISES[key]) {\n                    // we can mark it as a mutation to ignore\n                    // all requests which are fired before this one\n                    MUTATION_TS[key] = Date.now() - 1;\n                }\n                // if no cache being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && !cache.get(key)) {\n                    setTimeout(() => {\n                        if (loading)\n                            config.onLoadingSlow(key, config);\n                    }, config.loadingTimeout);\n                }\n                if (fnArgs !== null) {\n                    CONCURRENT_PROMISES[key] = fn(...fnArgs);\n                }\n                else {\n                    CONCURRENT_PROMISES[key] = fn(key);\n                }\n                CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                newData = await CONCURRENT_PROMISES[key];\n                setTimeout(() => {\n                    delete CONCURRENT_PROMISES[key];\n                    delete CONCURRENT_PROMISES_TS[key];\n                }, config.dedupingInterval);\n                // trigger the success event,\n                // only do this for the original request.\n                config.onSuccess(newData, key, config);\n            }\n            // if the revalidation happened earlier than the local mutation,\n            // we have to ignore the result because it could override.\n            // meanwhile, a new revalidation should be triggered by the mutation.\n            if (MUTATION_TS[key] && startAt <= MUTATION_TS[key]) {\n                dispatch({ isValidating: false });\n                return false;\n            }\n            cache.set(key, newData, false);\n            cache.set(keyErr, undefined, false);\n            // new state for the reducer\n            const newState = {\n                isValidating: false\n            };\n            if (typeof stateRef.current.error !== 'undefined') {\n                // we don't have an error\n                newState.error = undefined;\n            }\n            if (!config.compare(stateRef.current.data, newData)) {\n                // deep compare to avoid extra re-render\n                // data changed\n                newState.data = newData;\n            }\n            // merge the new state\n            dispatch(newState);\n            if (!shouldDeduping) {\n                // also update other hooks\n                broadcastState(key, newData, undefined);\n            }\n        }\n        catch (err) {\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cache.set(keyErr, err, false);\n            // get a new error\n            // don't use deep equal for errors\n            if (stateRef.current.error !== err) {\n                // we keep the stale data\n                dispatch({\n                    isValidating: false,\n                    error: err\n                });\n                if (!shouldDeduping) {\n                    // also broadcast to update other hooks\n                    broadcastState(key, undefined, err);\n                }\n            }\n            // events and retry\n            config.onError(err, key, config);\n            if (config.shouldRetryOnError) {\n                // when retrying, we always enable deduping\n                const retryCount = (revalidateOpts.retryCount || 0) + 1;\n                config.onErrorRetry(err, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount }));\n            }\n        }\n        loading = false;\n        return true;\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(() => {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        const currentHookData = stateRef.current.data;\n        const latestKeyedData = cache.get(key) || config.initialData;\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key ||\n            !config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n            keyRef.current = key;\n        }\n        // revalidate with deduping\n        const softRevalidate = () => revalidate({ dedupe: true });\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' &&\n                !IS_SERVER &&\n                window['requestIdleCallback']) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                window['requestIdleCallback'](softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        // whenever the window gets focused, revalidate\n        let onFocus;\n        if (config.revalidateOnFocus) {\n            // throttle: avoid being called twice from both listeners\n            // and tabs being switched quickly\n            onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n            if (!FOCUS_REVALIDATORS[key]) {\n                FOCUS_REVALIDATORS[key] = [onFocus];\n            }\n            else {\n                FOCUS_REVALIDATORS[key].push(onFocus);\n            }\n        }\n        // register global cache update listener\n        const onUpdate = (shouldRevalidate = true, updatedData, updatedError, dedupe = true) => {\n            // update hook state\n            const newState = {};\n            let needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        // add updater to listeners\n        if (!CACHE_REVALIDATORS[key]) {\n            CACHE_REVALIDATORS[key] = [onUpdate];\n        }\n        else {\n            CACHE_REVALIDATORS[key].push(onUpdate);\n        }\n        // set up reconnecting when the browser regains network connection\n        let reconnect = null;\n        if (!IS_SERVER && window.addEventListener && config.revalidateOnReconnect) {\n            window.addEventListener('online', (reconnect = softRevalidate));\n        }\n        return () => {\n            // cleanup\n            dispatch = () => null;\n            // mark it as unmounted\n            unmountedRef.current = true;\n            if (onFocus && FOCUS_REVALIDATORS[key]) {\n                const revalidators = FOCUS_REVALIDATORS[key];\n                const index = revalidators.indexOf(onFocus);\n                if (index >= 0) {\n                    // 10x faster than splice\n                    // https://jsperf.com/array-remove-by-index\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (CACHE_REVALIDATORS[key]) {\n                const revalidators = CACHE_REVALIDATORS[key];\n                const index = revalidators.indexOf(onUpdate);\n                if (index >= 0) {\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (!IS_SERVER && window.removeEventListener && reconnect !== null) {\n                window.removeEventListener('online', reconnect);\n            }\n        };\n    }, [key, revalidate]);\n    // set up polling\n    useIsomorphicLayoutEffect(() => {\n        let timer = null;\n        const tick = async () => {\n            if (!stateRef.current.error &&\n                (config.refreshWhenHidden || isDocumentVisible()) &&\n                (config.refreshWhenOffline || isOnline())) {\n                // only revalidate when the page is visible\n                // if API request errored, we stop polling in this round\n                // and let the error retry function handle it\n                await revalidate({ dedupe: true });\n            }\n            if (config.refreshInterval) {\n                timer = setTimeout(tick, config.refreshInterval);\n            }\n        };\n        if (config.refreshInterval) {\n            timer = setTimeout(tick, config.refreshInterval);\n        }\n        return () => {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        let latestData = cache.get(key);\n        let latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    return useMemo(() => {\n        const state = { revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                }\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                }\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                }\n            }\n        });\n        return state;\n    }, [revalidate]);\n}\nconst SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","import React, { useCallback, useMemo, useState, useRef } from 'react';\nimport { cache } from './config';\n/*\nThe idea\n\nA \"Page\" component renders the content of 1 API request, it accepts an offset (in this example it's from),\nuses a SWR hook (useSWR(API + '?limit=' + limit + '&from=' + from)) and returns items (Projects).\n\nThe UI:\n      +------------------------------------------+\n      |   Projects                               |\n+------------------------------------------------------+\n|     |   +----------------+                     |     |\n|     |                                          |     |\n|     |   +------------+                         |     |\n|     |                                          |     +--> 1 Page\n|     |   +-----------------+                    |     |\n|     |                                          |     |  /projects/list?limit=4\n|     |   +---------+                            |     |\n+------------------------------------------------------+\n      |                                          |\n      |   +------------+                         |     +  /projects/list?limit=4&from=123\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |   +---------+                            |     |\n      |                                          |     |\n      |   +--------------+                       |     +\n      |                                          |\n      |   +-------------------+                  |     +  /projects/list?limit=4&from=456\n      |                                          |     |\n      |   +------------+                         |     |\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |                                          |     +\n\nThe API\n// (inside `render`)\n\nfunction App () {\n  const {\n    pages,    // an array of each page component\n    pageSWRs, // an array of SWRs of each page\n    isLoadingMore,\n    isReachingEnd,\n    isEmpty,\n    loadMore\n  } = useSWRPages(\n    'project-page', // key of this page\n\n    // ======== the actual Page component!\n    ({ offset, withSWR }) => {\n      // required: use `withSWR` to wrap your main SWR (source of your pagination API)\n      const { data } = withSWR(\n        useSWR(API + '?limit=10&from=' + offset) // request projects with offset\n      )\n      if (!data) return <Placeholder>\n      return data.projects.map(project => <Card project={project} team={team}>)\n    },\n    // ========\n\n    // a function accepts a SWR's `data`, and returns the offset of the next page (or null)\n    data => data && data.length >= 10 ? data[data.length - 1].createdAt : null,\n\n    // (optional) outside deps of your Page component. in this case it's empty\n    []\n  )\n\n  // ...\n\n  if (isEmpty) return <EmptyProjectsPage/>\n\n  return <div>\n    {pages}\n    {isReachingEnd\n      ? null\n      : <button loading={isLoadingMore} onClick={loadMore}>Load More</button>}\n  </div>\n}\n*/\nconst pageCacheMap = new Map();\nexport function useSWRPages(pageKey, pageFn, SWRToOffset, deps = []) {\n    const pageCountKey = `_swr_page_count_` + pageKey;\n    const pageOffsetKey = `_swr_page_offset_` + pageKey;\n    const [pageCount, setPageCount] = useState(cache.get(pageCountKey) || 1);\n    const [pageOffsets, setPageOffsets] = useState(cache.get(pageOffsetKey) || [null]);\n    const [pageSWRs, setPageSWRs] = useState([]);\n    const pageFnRef = useRef(pageFn);\n    const emptyPageRef = useRef(false);\n    // Page component (wraps `pageFn`)\n    // for performance reason we need to memorize it\n    const Page = useCallback(props => {\n        // render the page component\n        const dataList = pageFnRef.current(props);\n        // if dataList is [], we can assume this page is empty\n        // TODO: this API is not stable\n        if (dataList && !dataList.length) {\n            emptyPageRef.current = true;\n        }\n        else {\n            emptyPageRef.current = false;\n        }\n        return dataList;\n    }, []);\n    // Doesn't have a next page\n    const isReachingEnd = pageOffsets[pageCount] === null;\n    const isLoadingMore = pageCount === pageOffsets.length;\n    const isEmpty = isReachingEnd && pageCount === 1 && emptyPageRef.current;\n    const loadMore = useCallback(() => {\n        if (isLoadingMore || isReachingEnd)\n            return;\n        setPageCount(c => {\n            cache.set(pageCountKey, c + 1);\n            return c + 1;\n        });\n    }, [isLoadingMore || isReachingEnd]);\n    const _pageFn = useCallback(pageFn, deps);\n    pageFnRef.current = _pageFn;\n    const pages = useMemo(() => {\n        const getWithSWR = id => swr => {\n            if (!pageSWRs[id] ||\n                pageSWRs[id].data !== swr.data ||\n                pageSWRs[id].error !== swr.error ||\n                pageSWRs[id].revalidate !== swr.revalidate) {\n                // hoist side effects: setPageSWRs and setPageOffsets -- https://reactjs.org/blog/2020/02/26/react-v16.13.0.html#warnings-for-some-updates-during-render\n                setTimeout(() => {\n                    setPageSWRs(swrs => {\n                        const _swrs = [...swrs];\n                        _swrs[id] = {\n                            data: swr.data,\n                            error: swr.error,\n                            revalidate: swr.revalidate,\n                            isValidating: swr.isValidating,\n                            mutate: swr.mutate\n                        };\n                        return _swrs;\n                    });\n                    if (typeof swr.data !== 'undefined') {\n                        // set next page's offset\n                        const newPageOffset = SWRToOffset(swr, id);\n                        if (pageOffsets[id + 1] !== newPageOffset) {\n                            setPageOffsets(arr => {\n                                const _arr = [...arr];\n                                _arr[id + 1] = newPageOffset;\n                                cache.set(pageOffsetKey, _arr);\n                                return _arr;\n                            });\n                        }\n                    }\n                });\n            }\n            return swr;\n        };\n        // render each page\n        const p = [];\n        if (!pageCacheMap.has(pageKey)) {\n            pageCacheMap.set(pageKey, []);\n        }\n        const pageCache = pageCacheMap.get(pageKey);\n        for (let i = 0; i < pageCount; ++i) {\n            if (!pageCache[i] ||\n                pageCache[i].offset !== pageOffsets[i] ||\n                pageCache[i].pageFn !== _pageFn) {\n                // when props change or at init\n                // render the page and cache it\n                pageCache[i] = {\n                    component: (React.createElement(Page, { key: `page-${pageOffsets[i]}-${i}`, offset: pageOffsets[i], withSWR: getWithSWR(i) })),\n                    pageFn: _pageFn,\n                    offset: pageOffsets[i]\n                };\n            }\n            p.push(pageCache[i].component);\n        }\n        return p;\n    }, [_pageFn, pageCount, pageSWRs, pageOffsets, pageKey]);\n    return {\n        pages,\n        pageCount,\n        pageSWRs,\n        isLoadingMore,\n        isReachingEnd,\n        isEmpty,\n        loadMore\n    };\n}\n","export * from './use-swr';\nimport { default as useSWR } from './use-swr';\nexport { useSWRPages } from './use-swr-pages';\nexport { cache } from './config';\nexport default useSWR;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}