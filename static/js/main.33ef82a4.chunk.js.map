{"version":3,"sources":["constants.js","utils/commonfunctions.js","serviceWorker.js","i18n/index.js","index.js"],"names":["LOCALE_SHORTHANDS","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","PRIMARY_STATISTICS","MAP_STATISTICS","TIMESERIES_STATISTICS","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","NUM_BARS_STATEPAGE","UNKNOWN_DISTRICT_KEY","INDIA_ISO_SUFFIX","COLORS","confirmed","active","recovered","deceased","tested","TIMESERIES_CHART_TYPES","total","delta","TIMESERIES_OPTIONS","BEGINNING","MONTH","TWO_WEEKS","MAP_OPTIONS","TOTAL","PER_MILLION","HOTSPOTS","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","ZONE_COLORS","Red","Orange","Green","MAPS_DIR","MAP_META","AP","geoDataFile","mapType","graphObjectDistricts","AR","AS","BR","CT","name","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","graphObjectStates","MAP_LEGEND_HEIGHT","STATE_NAMES","UN","stateCodes","stateCodesMap","Object","keys","map","key","index","push","code","STATE_CODES","STATE_CODES_ARRAY","STATE_POPULATIONS","STATE_POPULATIONS_MIL","reduce","res","stateCode","RAW_DATA_PARTITIONS","v1","start","Date","end","v2","v3","v4","v5","v6","ESSENTIALS_CATEGORIES","Ambulance","Fundraisers","Police","Transportation","Other","locale","isDevelopmentOrTest","getIndiaDate","utcToZonedTime","getIndiaDateISO","formatISO","representation","getIndiaYesterdayISO","subDays","formatLastUpdated","unformattedDate","then","localePackage","i18n","language","window","localStorage","i18nextLng","formatDistance","parseIndiaDate","isoDate","formatDate","formatString","match","date","format","formatNumber","value","numberFormatter","Intl","NumberFormat","maximumFractionDigits","isNaN","capitalize","s","charAt","toUpperCase","slice","capitalizeAll","str","toLowerCase","split","i","length","join","getStatistic","data","type","statistic","count","normalizer","migrated","fetcher","url","fetch","response","json","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","use","Backend","LanguageDetector","initReactI18next","init","debug","keySeparator","returnEmptyString","fallbackLng","load","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","App","lazy","ReactDOM","render","fallback","document","getElementById","URL","process","href","origin","addEventListener","setTimeout","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33ef82a4.chunk.js","sourcesContent":["export const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US',\n};\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const BIG_TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\n\nexport const NUM_BARS_STATEPAGE = 5;\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const COLORS = {\n  confirmed: '#ff073a',\n  active: '#007bff',\n  recovered: '#28a745',\n  deceased: '#6c757d',\n  tested: '#4b1eaa',\n};\n\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily',\n};\n\nexport const TIMESERIES_OPTIONS = {\n  BEGINNING: 'Beginning',\n  MONTH: '1 Month',\n  TWO_WEEKS: '2 Weeks',\n};\n\nexport const MAP_OPTIONS = {\n  TOTAL: 'Total',\n  PER_MILLION: 'Per million',\n  HOTSPOTS: 'Hotspots',\n  // ZONES: 'Zones',\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const ZONE_COLORS = {\n  Red: '#d73027',\n  Orange: '#fee08b',\n  Green: '#66bd63',\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andhrapradesh_district',\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'arunachalpradesh_district',\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'assam_district',\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'bihar_district',\n  },\n  CT: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chhattisgarh_district',\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'goa_district',\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'gujarat_district',\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'haryana_district',\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'himachalpradesh_district',\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jammukashmir_district',\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jharkhand_district',\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'karnataka_district',\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'kerala_district',\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'madhyapradesh_district',\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'maharashtra_district',\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'manipur_district',\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'meghalaya_district',\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'mizoram_district',\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'nagaland_district',\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'odisha_district',\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'punjab_district',\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'rajasthan_district',\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'sikkim_district',\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tamilnadu_district',\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'telangana_district',\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tripura_district',\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarakhand_district',\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarpradesh_district',\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'westbengal_district',\n  },\n  AN: {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andamannicobarislands_district',\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chandigarh_district',\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'dnh-and-dd',\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'delhi_district',\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'ladakh_district',\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'lakshadweep_district',\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'puducherry_district',\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectStates: 'india-states',\n    graphObjectDistricts: 'india-districts-2019-734',\n  },\n};\n\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'Total',\n  UN: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n\n// Source: Projected Populations (2019)\n// National Commission on Population, \"Population Projections for India and\n// States (2011-2036)\", Table-8 (p43), November 2019\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\nexport const STATE_POPULATIONS = {\n  AP: 52221000,\n  AR: 1504000,\n  AS: 34293000,\n  BR: 119520000,\n  CT: 28724000,\n  GA: 1540000,\n  GJ: 67936000,\n  HR: 28672000,\n  HP: 7300000,\n  JH: 37403000,\n  KA: 65798000,\n  KL: 35125000,\n  MP: 82232000,\n  MH: 122153000,\n  MN: 3103000,\n  ML: 3224000,\n  MZ: 1192000,\n  NL: 2150000,\n  OR: 43671000,\n  PB: 29859000,\n  RJ: 77264000,\n  SK: 664000,\n  TN: 75695000,\n  TG: 37220000,\n  TR: 3992000,\n  UP: 224979000,\n  UT: 11141000,\n  WB: 96906000,\n  AN: 397000,\n  CH: 1179000,\n  DN: 959000,\n  DL: 19814000,\n  JK: 13203000,\n  LA: 293000,\n  LD: 68000,\n  PY: 1504000,\n  TT: 1332900000,\n};\n\nexport const STATE_POPULATIONS_MIL = Object.keys(STATE_POPULATIONS).reduce(\n  (res, stateCode) => {\n    res[stateCode] = 1e-6 * STATE_POPULATIONS[stateCode];\n    return res;\n  },\n  {}\n);\n\nexport const RAW_DATA_PARTITIONS = {\n  v1: {\n    start: new Date(2020, 0, 1),\n    end: new Date(2020, 3, 19),\n  },\n  v2: {\n    start: new Date(2020, 3, 20),\n    end: new Date(2020, 3, 26),\n  },\n  v3: {\n    start: new Date(2020, 3, 27),\n    end: new Date(2020, 4, 9),\n  },\n  v4: {\n    start: new Date(2020, 4, 10),\n    end: new Date(2020, 4, 23),\n  },\n  v5: {\n    start: new Date(2020, 4, 24),\n    end: new Date(2020, 5, 4),\n  },\n  v6: {\n    start: new Date(2020, 5, 5),\n    end: new Date(),\n  },\n};\n\nexport const ESSENTIALS_CATEGORIES = {\n  'Accommodation and Shelter Homes': 'homes',\n  Ambulance: 'ambulance',\n  'Community Kitchen': 'kitchen',\n  'CoVID-19 Testing Lab': 'lab',\n  'Delivery [Vegetables, Fruits, Groceries, Medicines, etc.]': 'delivery',\n  'Fire Brigade': 'fire',\n  'Free Food': 'food',\n  Fundraisers: 'fund',\n  'Government Helpline': 'helpline',\n  'Hospitals and Centers': 'hospital',\n  'Mental well being and Emotional Support': 'well-being',\n  Police: 'police',\n  'Senior Citizen Support': 'seniors',\n  Transportation: 'transport',\n  'Quarantine Facility': 'quarantine',\n  Other: 'other',\n  'Helpline for Cyclone Amphan': 'cyclone amphan',\n};\n\nexport const INITIAL_DATA = {\n  TT: {\n    total: {\n      confirmed: 0,\n      recovered: 0,\n      deceased: 0,\n    },\n    delta: {\n      confirmed: 0,\n      recovered: 0,\n      deceased: 0,\n    },\n    last_updated: null,\n    notes: '',\n  },\n};\n","import {INDIA_ISO_SUFFIX, LOCALE_SHORTHANDS} from '../constants';\n\nimport {format, formatDistance, formatISO, subDays} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nlet locale = null;\n\nconst getLocale = () => {\n  import('date-fns/locale/').then((localePackage) => {\n    locale =\n      localePackage[\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\n      ];\n  });\n};\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getIndiaDate = () => {\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\n};\n\nexport const getIndiaDateISO = () => {\n  return formatISO(getIndiaDate(), {representation: 'date'});\n};\n\nexport const getIndiaYesterdayISO = () => {\n  return formatISO(subDays(getIndiaDate(), 1), {representation: 'date'});\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  getLocale();\n  return formatDistance(new Date(unformattedDate), new Date(), {\n    locale: locale,\n  });\n};\n\nexport const parseIndiaDate = (isoDate) => {\n  return new Date(isoDate + INDIA_ISO_SUFFIX);\n};\n\nexport const formatDate = (unformattedDate, formatString) => {\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(/^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g)\n  )\n    unformattedDate += INDIA_ISO_SUFFIX;\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n  return format(date, formatString, {\n    locale: locale,\n  });\n};\n\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN', {\n    maximumFractionDigits: 2,\n  });\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const capitalizeAll = (s) => {\n  if (typeof s !== 'string') return '';\n  const str = s.toLowerCase().split(' ');\n  for (let i = 0; i < str.length; i++) {\n    str[i] = capitalize(str[i]);\n  }\n  return str.join(' ');\n};\n\nexport const abbreviate = (s) => {\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const getStatistic = (data, type, statistic, normalizer = 1) => {\n  let count;\n  if (statistic === 'active') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const deceased = data?.[type]?.deceased || 0;\n    const recovered = data?.[type]?.recovered || 0;\n    const migrated = data?.[type]?.migrated || 0;\n    count = confirmed - deceased - recovered - migrated;\n  } else {\n    count = data?.[type]?.[statistic] || 0;\n  }\n  return count / normalizer;\n};\n\nexport const fetcher = (url) => {\n  return fetch(url).then((response) => {\n    return response.json();\n  });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () =>\n      setTimeout(() => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n\n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      }, 3000)\n    );\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {isDevelopmentOrTest} from '../utils/commonfunctions';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport {initReactI18next} from 'react-i18next';\n\nconst DEBUG = false;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: isDevelopmentOrTest() && DEBUG,\n    keySeparator: false,\n    returnEmptyString: false,\n    fallbackLng: 'english',\n    load: 'languageOnly',\n    backend: {\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\n      addPath: 'http://localhost:9999/',\n    },\n    saveMissing: isDevelopmentOrTest() && DEBUG,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import './wdyr';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport React, {Suspense, lazy} from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = lazy(() => import('./App' /* webpackChunkName: \"App\" */));\n\nReactDOM.render(\n  <Suspense fallback={<div />}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}